<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">  
    <title>To-do App | Techlore</title>
    <link rel="stylesheet" href="style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <%- include('../partials/links2', {page: "todo"}) %>
  </head>
  <body>

    <%- include('../partials/navbar', {page: "todo", user: session.user}) %>
    <div class="wrapper">
      <div class="task-input">
          <i class="fa-solid fa-align-left"></i>
        <input type="text" class="tech" placeholder="Add a new task">
      </div>
      <div class="controls">
        <div class="filters">
          <span class="active" id="all"><i class="fa-solid fa-clipboard-list"></i> All</span>
          <span id="pending"><i class="fa-solid fa-clock"></i> Pending</span>
          <span id="completed"><i class="fa-solid fa-clipboard-check"></i> Completed</span>
        </div>
        <button class="clear-btn">Clear All</button>
      </div>
      <ul class="task-box"></ul>
    </div>
      <%- include('../partials/footer') %>
    <script>
      const taskInput = document.querySelector(".task-input input"),
      filters = document.querySelectorAll(".filters span"),
      clearAll = document.querySelector(".clear-btn"),
      taskBox = document.querySelector(".task-box");

      let editId,
      isEditTask = false,
      todos = JSON.parse(localStorage.getItem("todo-list"));

      filters.forEach(btn => {
          btn.addEventListener("click", () => {
              document.querySelector("span.active").classList.remove("active");
              btn.classList.add("active");
              showTodo(btn.id);
          });
      });

      function showTodo(filter) {
          let liTag = "";
          if(todos) {
              todos.forEach((todo, id) => {
                  let completed = todo.status == "completed" ? "checked" : "";
                  if(filter == todo.status || filter == "all") {
                      liTag += `<li class="task">
                                  <label for="${id}">
                                      <input onclick="updateStatus(this)" type="checkbox" id="${id}" ${completed}>
                                      <p class="${completed}">${todo.name}</p>
                                  </label>
                                  <div class="settings">
                                      <i onclick="showMenu(this)" class="fa-solid fa-ellipsis"></i>
                                      <ul class="task-menu">
                                          <li onclick='editTask(${id}, "${todo.name}")'><i class="fa-solid fa-pen"></i>Edit</li>
                                          <li class="deletebtn" onclick='deleteTask(${id}, "${filter}")'><i class="fa-solid fa-trash"></i>Delete</li>
                                      </ul>
                                  </div>
                              </li>`;
                  }
              });
          }
          taskBox.innerHTML = liTag || `<span>You don't have any task here</span>`;
          let checkTask = taskBox.querySelectorAll(".task");
          !checkTask.length ? clearAll.classList.remove("active") : clearAll.classList.add("active");
          taskBox.offsetHeight >= 300 ? taskBox.classList.add("overflow") : taskBox.classList.remove("overflow");
      }
      showTodo("all");

      function showMenu(selectedTask) {
          let menuDiv = selectedTask.parentElement.lastElementChild;
          menuDiv.classList.add("show");
          document.addEventListener("click", e => {
              if(e.target.tagName != "I" || e.target != selectedTask) {
                  menuDiv.classList.remove("show");
              }
          });
      }

      function updateStatus(selectedTask) {
          let taskName = selectedTask.parentElement.lastElementChild;
          if(selectedTask.checked) {
              taskName.classList.add("checked");
              todos[selectedTask.id].status = "completed";
          } else {
              taskName.classList.remove("checked");
              todos[selectedTask.id].status = "pending";
          }
          localStorage.setItem("todo-list", JSON.stringify(todos))
      }

      function editTask(taskId, textName) {
          editId = taskId;
          isEditTask = true;
          taskInput.value = textName;
          taskInput.focus();
          taskInput.classList.add("active");
      }

      function deleteTask(deleteId, filter) {
          isEditTask = false;
          todos.splice(deleteId, 1);
          localStorage.setItem("todo-list", JSON.stringify(todos));
          showTodo(filter);
      }

      clearAll.addEventListener("click", () => {
          isEditTask = false;
          todos.splice(0, todos.length);
          localStorage.setItem("todo-list", JSON.stringify(todos));
          showTodo()
      });

      taskInput.addEventListener("keyup", e => {
          let userTask = taskInput.value.trim();
          if(e.key == "Enter" && userTask) {
              if(!isEditTask) {
                  todos = !todos ? [] : todos;
                  let taskInfo = {name: userTask, status: "pending"};
                  todos.push(taskInfo);
              } else {
                  isEditTask = false;
                  todos[editId].name = userTask;
              }
              taskInput.value = "";
              localStorage.setItem("todo-list", JSON.stringify(todos));
              showTodo(document.querySelector("span.active").id);
          }
      });
    </script>

  </body>
</html>